#!/usr/bin/python3

import cv2
import os
import numpy as np
import matplotlib.pyplot as plt

def get_features():
    features = ["agricultural_area","central_commercial_area","commercial_area","green_area",
            "highway","industrial_area","management_area","mountains","nature_reserved_area"
            ,"reserved_residential","residential_area","road","semi_residential_area",
            "water"]
    imglist = []
    for idx in range(len(features)):
        img_path = f'map_rgb_params/{features[idx]}.png'
        img = cv2.imread(img_path, cv2.IMREAD_GRAYSCALE)
        imglist.append(img[1][1])
    features_dict = dict(zip(features, imglist))
    return features_dict

def get_data():
    f = open('C:/Users/Heedong/testset/names2.txt','rt', encoding='utf-8')
    names = f.read().split("\n")
    pathes = []
    for path in names:
        path.strip()
        pathes.append(f'C:/Users/Heedong/testset/{path}')
    f.close()
    datalist = []   ### opencv 한글경로 깨짐 문제 해결
    for path in pathes:
        stream = open(path.encode("utf-8"), 'rb')
        tmpBytes = bytearray(stream.read())
        npArray = np.asarray(tmpBytes, dtype=np.uint8)
        datalist.append(cv2.imdecode(npArray, cv2.IMREAD_UNCHANGED))
    return datalist, names
    #return cv2.imdecode(npArray, cv2.IMREAD_UNCHANGED)

def get_test(filepath):
    stream = open(filepath.encode("utf-8"), 'rb')
    tmpBytes = bytearray(stream.read())
    npArray = np.asarray(tmpBytes, dtype=np.uint8)
    test = cv2.imdecode(npArray, cv2.IMREAD_UNCHANGED)
    return test

def np_hist_to_cv(np_histogram_output):
    counts, bin_edges = np_histogram_output
    return counts.ravel().astype('float32')

def histogram_matching(dataList, names, test): # cast into 3rd dimensional
    imsif = test.flatten()
    drop_transparency = input("Do you want to remove transparency?[y/n] ")
    if drop_transparency.lower() == 'y':
        zfill = np.zeros(4077118)
        imsif[4077118*3:] = zfill
        #imsi = imsif.reshape(1453,2806,-1)
    h1f = np.histogram(imsif)
    values = []
    for i in range(len(dataList)):
        sub_val = []
        if drop_transparency.lower() == 'y':
            data = dataList[i].flatten()
            data[4077118*3:] = zfill
        h2f = np.histogram(data)
        sub_val.append(round(cv2.compareHist(np_hist_to_cv(h1f), np_hist_to_cv(h2f), cv2.HISTCMP_CORREL), 5))
        sub_val.append(round(cv2.compareHist(np_hist_to_cv(h1f), np_hist_to_cv(h2f), cv2.HISTCMP_CHISQR), 5))
        sub_val.append(round(cv2.compareHist(np_hist_to_cv(h1f), np_hist_to_cv(h2f), cv2.HISTCMP_INTERSECT), 5))
        sub_val.append(round(cv2.compareHist(np_hist_to_cv(h1f), np_hist_to_cv(h2f), cv2.HISTCMP_BHATTACHARYYA), 5))
        values.append(sub_val)
    return dict(zip(names, values))

if __name__ == "__main__":
    dataList, names = get_data()
    test = get_test("jubong.png")

    plt.imshow(test)
    print(test.shape)

    result_dict = histogram_matching(dataList, names, test)

    #### 에러 발생 ###
    #dataList[0].flatten()[:-4077118].shape
    #plt.imshow()
    ########
    # 총 16308472 0:4077118
